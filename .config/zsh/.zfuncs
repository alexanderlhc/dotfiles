
ncd ()
{
    # Block nesting of nnn in subshells
    if [[ "${NNNLVL:-0}" -ge 1 ]]; then
        echo "nnn is already running"
        return
    fi

    # The behaviour is set to cd on quit (nnn checks if NNN_TMPFILE is set)
    # If NNN_TMPFILE is set to a custom path, it must be exported for nnn to
    # see. To cd on quit only on ^G, remove the "export" and make sure not to
    # use a custom path, i.e. set NNN_TMPFILE *exactly* as follows:
    #     NNN_TMPFILE="${XDG_CONFIG_HOME:-$HOME/.config}/nnn/.lastd"
    export NNN_TMPFILE="${XDG_CONFIG_HOME:-$HOME/.config}/nnn/.lastd"

    # Unmask ^Q (, ^V etc.) (if required, see `stty -a`) to Quit nnn
    # stty start undef
    # stty stop undef
    # stty lwrap undef
    # stty lnext undef

    # The backslash allows one to alias n to nnn if desired without making an
    # infinitely recursive alias
    \nnn "$@"

    if [ -f "$NNN_TMPFILE" ]; then
            . "$NNN_TMPFILE"
            rm -f "$NNN_TMPFILE" > /dev/null
    fi
}

function cdf() {
    base_dir=${1:-$PWD}
    max_depth=${2:-1}
    dir="$(find "$base_dir" -type d -maxdepth "$max_depth" -print 2>/dev/null | fzf)"
    cd "$dir"
}

function cdh() {
    base_dir=${1:-$HOME}
    max_depth=${2:-1}
    dir="$(find "$base_dir" -type d -maxdepth "$max_depth" -print 2>/dev/null | fzf)"
    cd "$dir"
}

# ~/.zshrc
_git_config_complete() {
  # Complete the command arguments as if it were a Git command
  compadd $(git config --get-regexp "alias\.config" | awk '{print $2}')
}
# Set up completion for the 'config' alias
compdef _git_config_complete config


# make sure to only initiate one polkitagent
# eg: run_polkit_agent "/usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1"
run_polkit_agent() {
    lockfile="/tmp/polkit-agent.lock"
    
    # Check if lock file exists
    if [ -f "$lockfile" ]; then
        echo "Polkit agent is already running."
    else
        "$1" &
        touch "$lockfile"
    fi
}
