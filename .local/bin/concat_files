#!/bin/bash
# Function to display usage information
usage() {
  echo "Usage: $0 -d targetdir1,targetdir2,... -t filetype1,filetype2,... -o outputfile"
  exit 1
}

# Parse command line arguments
while getopts ":d:t:o:" opt; do
  case $opt in
  d) IFS=',' read -r -a targetdirs <<<"$OPTARG" ;;
  t) IFS=',' read -r -a filetypes <<<"$OPTARG" ;;
  o) outputfile="$OPTARG" ;;
  *) usage ;;
  esac
done

# Check if target directories, filetypes, and output file are provided
if [ ${#targetdirs[@]} -eq 0 ] || [ ${#filetypes[@]} -eq 0 ] || [ -z "$outputfile" ]; then
  usage
fi

# Clear the output file
: >"$outputfile"

# Function to process files of a specific type in a specific directory
process_files() {
  local targetdir=$1
  local filetype=$2
  echo "Processing files of type: $filetype in directory: $targetdir" # Debug statement

  # Check if the target directory exists
  if [ -d "$targetdir" ]; then
    find "$targetdir" -type f -name "*.${filetype}" | while read -r file; do
      # Compute the relative path
      relative_path=$(realpath --relative-to="$targetdir" "$file")
      {
        echo "// $relative_path"
        cat "$file"
        echo "" # Add a newline for separation
      } >>"$outputfile"
    done
  else
    echo "Error: Target directory '$targetdir' does not exist."
  fi
}

# Iterate over each target directory and process each filetype
for targetdir in "${targetdirs[@]}"; do
  for filetype in "${filetypes[@]}"; do
    process_files "$targetdir" "$filetype"
  done
done

echo "Concatenation complete. Output written to $outputfile"
# vim: set ft=bash:
