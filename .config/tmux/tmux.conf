# plugins
# git clone https://github.com/tmux-plugins/tpm ~/.local/share/tmux/plugins/tpm
set-environment -g TMUX_PLUGIN_MANAGER_PATH '~/.local/share/tmux/plugins'
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'catppuccin/tmux'
# set -g @plugin 'sainnhe/tmux-fzf'
set -g @plugin 'Morantron/tmux-fingers'

# settings
set -g base-index 1
setw -g pane-base-index 1
set-option -g allow-rename off
set-window-option -g automatic-rename on
set-option -sg escape-time 10 # nvim recommended
set-option -g focus-events on # nvim recommended (autoread)
set -g default-terminal "${TERM}"
set -g window-status-format "#{s/0/‚Å∞/;s/1/¬π/;s/2/¬≤/;s/3/¬≥/;s/4/‚Å¥/;s/5/‚Åµ/;s/6/‚Å∂/;s/7/‚Å∑/;s/8/‚Å∏/;s/9/‚Åπ/:window_index} #W#{?window_zoomed_flag, üîç,‚Åï}"
set -g window-status-current-format "#[bold,fg=colour13]#{s/0/‚Å∞/;s/1/¬π/;s/2/¬≤/;s/3/¬≥/;s/4/‚Å¥/;s/5/‚Åµ/;s/6/‚Å∂/;s/7/‚Å∑/;s/8/‚Å∏/;s/9/‚Åπ/:window_index} #W#{?window_zoomed_flag, üîç,‚Åï}"
set -g window-status-separator " "
set -g status-left ' #[bold,fg=colour9]<3 CLI #[nobold,fg=colour10]#S | '
set -g status-right ' | #[bold]%H:%M - %d %b %Y '

# 24-bit true color support
set -ag terminal-overrides ",*:XT@:Tc"
set -ga terminal-overrides ",xterm-256color:Tc"

# plugin settings
set -g @catppuccin_flavour 'latte' # or frappe, macchiato, mocha
set -g @catppuccin_window_tabs_enabled on

TMUX_FZF_ORDER="session|window|pane|command|keybinding"

# neovim plugin ######
set-window-option -g mode-keys vi
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator

# decide whether we're in a Vim process
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'

if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -n 'C-Space' if-shell "$is_vim" 'send-keys C-Space' 'select-pane -t:.+'

bind-key -n 'C-n' if-shell "! $is_vim" 'send-keys C-n' 'next-window'
bind-key -n 'C-p' if-shell "! $is_vim" 'send-keys C-p' 'previous-window'
bind-key -n 'M-a' last-window
bind-key -n 'M-1' select-window -t 1
bind-key -n 'M-2' select-window -t 2
bind-key -n 'M-3' select-window -t 3
bind-key -n 'M-4' select-window -t 4
bind-key -n 'M-5' select-window -t 5
bind-key -n 'M-6' select-window -t 6
bind-key -n 'M-7' select-window -t 7
bind-key -n 'M-8' select-window -t 8
bind-key -n 'M-9' select-window -t 9
bind-key -n 'M-0' select-window -t 0
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
bind-key -T copy-mode-vi 'C-Space' select-pane -t:.+

# bind-key -T vi-copy 'j' page-down
# bind-key -T vi-copy 'k' page-up
# bind-key -T vi-copy 'v' begin-selection                  
# bind-key -T vi-copy 'y' copy-selection
###########

# mouse
set -g mouse on 

# bindings
# setw -g mode-keys vi
bind -n C-n next-window
bind -n C-p previous-window
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
bind C new-window -c "#{pane_current_path}"
# reorder windows
bind -n S-Left swap-window -d -t -1
bind -n S-Right swap-window -d -t +1
# Allow copy-mode while holding ctrl
bind C-[ copy-mode
# vim like copy
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel
bind P paste-buffer
bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel
# scroll
bind-key -T copy-mode-vi C-k send-keys -X -N 5 scroll-up
bind-key -T copy-mode-vi C-j send-keys -X -N 5 scroll-down
# g for lazygit
bind-key g new-window -n "lg" -c "#{pane_current_path}" "lazygit"
# Size of the pane
bind -n M-H resize-pane -L 2
bind -n M-L resize-pane -R 2
bind -n M-K resize-pane -U 2
bind -n M-J resize-pane -D 2

# clear screen
bind C-l send-keys 'C-l'

# features
bind R run-shell 'tmux rename-window "$(basename "$(tmux display-message -p "#{pane_current_path}")")" \; display-message "Renamed"'
bind-key r source-file "~/.config/tmux/tmux.conf" \; display-message "tmux.conf reloaded!"

run '~/.local/share/tmux/plugins/tpm/tpm'
