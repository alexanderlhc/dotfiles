#!/bin/env bash

DEFAULT_PASSWORD_STORE_DIR=~/.password-store

# Prints the usage of the script
function print_usage {
	echo "Usage: $(basename "$0") [ -h | -c wayland|xclip | -d | -p store_dir ]"
	echo "Options:"
	echo "  -h   Shows help message and exits."
	echo "  -c   Specifies clipboard tool. 'wayland' or 'xclip'. (Default: wayland)"
	echo "  -d   Deletes from clipboard after 45 sec. Works only with cliphist on wayland."
	echo "  -p   Specifies custom password store directory. (Default: ~/.password-store)"
}

# Lists passwords
function list_passwords {
	local prefix="${1:-$DEFAULT_PASSWORD_STORE_DIR}"
	local password_files=("$prefix"/**/*.gpg)
	password_files=("${password_files[@]#${prefix}/}")
	password_files=("${password_files[@]%.gpg}")
	local passwords_list=$(printf '%s\n' "${password_files[@]}" | sed 's/\.gpg$//')
	echo "$passwords_list"
}

# Shows passwords
function show_passwords {
	local passwords_list=$(list_passwords "$1")
	local selected_entry=$(echo "$passwords_list" | rofi -dmenu -p "Select password:")
	echo "$selected_entry"
}

# Gets password
function get_password {
	local password_entry=$1
	local password=$(pass show "$password_entry" | head -n1)
	echo "$password"
}

# Copies to clipboard
function copy_to_clipboard {
	local password=$1
	local clipboard_tool=$2

	if [ "$clipboard_tool" = "wayland" ]; then
		echo -n "$password" | wl-copy -n
		notify-send "Password copied to clipboard using Wayland!"
	elif [ "$clipboard_tool" = "xclip" ]; then
		echo -n "$password" | xclip -selection clipboard
		notify-send "Password copied to clipboard using xclip!"
	else
		echo "Invalid clipboard tool. Options: 'wayland' or 'xclip'."
		exit 1
	fi
}

# Deletes from clipboard
function delete_from_clipboard {
	local password=$1
	sleep 45 && cliphist delete-query "$password" | wl-copy -c
	notify-send "Clipboard cleared!"
}

# Main function
function main {
	local clipboard_tool="wayland"
	local delete_passwords=false
	local password_store_dir=$DEFAULT_PASSWORD_STORE_DIR

	while getopts "hc:dp:" opt; do
		case "$opt" in
		h)
			print_usage
			exit 0
			;;
		c) clipboard_tool="$OPTARG" ;;
		d) delete_passwords=true ;;
		p) password_store_dir="$OPTARG" ;;
		\?)
			print_usage
			exit 1
			;;
		esac
	done

	local selected_password_entry=$(show_passwords "$password_store_dir")
	if [ "$selected_password_entry" = "" ]; then
		echo "No password selected, exiting"
		exit 1
	fi

	local password=$(get_password "$selected_password_entry")
	copy_to_clipboard "$password" "$clipboard_tool"

	if "$delete_passwords" && [ "$clipboard_tool" = "wayland" ]; then
		delete_from_clipboard "$password"
	fi
}

main "$@"
